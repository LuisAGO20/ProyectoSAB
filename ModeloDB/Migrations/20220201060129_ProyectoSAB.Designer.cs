// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(AprobacionBecaDB))]
    [Migration("20220201060129_ProyectoSAB")]
    partial class ProyectoSAB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Entidades.Configuracion", b =>
                {
                    b.Property<string>("CompromisoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditoMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreInstitucion")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Modelo.Entidades.Ingresos", b =>
                {
                    b.Property<int>("IngresosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AporteSeguro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FondoReserva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HorasExtra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIngresos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IngresosId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Modelo.Entidades.Institucion", b =>
                {
                    b.Property<int>("InstitucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitucionId");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("Modelo.Entidades.Oferta", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carrera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Duracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modalidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfertaId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Modelo.Entidades.Preoferta", b =>
                {
                    b.Property<int>("InstitucionId")
                        .HasColumnType("int");

                    b.Property<int>("OfertaId")
                        .HasColumnType("int");

                    b.HasKey("InstitucionId", "OfertaId");

                    b.HasIndex("OfertaId");

                    b.ToTable("Preofertas");
                });

            modelBuilder.Entity("Modelo.Entidades.Reporte", b =>
                {
                    b.Property<int>("ReporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReporteId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Modelo.Entidades.Solicitud", b =>
                {
                    b.Property<int>("SolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CuotaMensual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReporteId")
                        .HasColumnType("int");

                    b.Property<int>("TiempoPago")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("SolicitudId");

                    b.HasIndex("ReporteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Modelo.Entidades.TablaPagos", b =>
                {
                    b.Property<int>("TablaPagosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaMensual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PlazoTiempo")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("TablaPagosId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Modelo.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Modelo.Entidades.Ingresos", b =>
                {
                    b.HasOne("Modelo.Entidades.Usuario", "Usuarios")
                        .WithOne("ResumenIngresos")
                        .HasForeignKey("Modelo.Entidades.Ingresos", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Modelo.Entidades.Preoferta", b =>
                {
                    b.HasOne("Modelo.Entidades.Institucion", "Instituciones")
                        .WithMany("Preofertas")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Oferta", "Ofertas")
                        .WithMany("Preofertas")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Instituciones");

                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("Modelo.Entidades.Solicitud", b =>
                {
                    b.HasOne("Modelo.Entidades.Reporte", "Reportes")
                        .WithMany("Solicitudes")
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Usuario", "Usuarios")
                        .WithMany("Solicitudes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reportes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Modelo.Entidades.TablaPagos", b =>
                {
                    b.HasOne("Modelo.Entidades.Solicitud", "Solicitudes")
                        .WithMany("Pagos")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Modelo.Entidades.Institucion", b =>
                {
                    b.Navigation("Preofertas");
                });

            modelBuilder.Entity("Modelo.Entidades.Oferta", b =>
                {
                    b.Navigation("Preofertas");
                });

            modelBuilder.Entity("Modelo.Entidades.Reporte", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Modelo.Entidades.Solicitud", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Modelo.Entidades.Usuario", b =>
                {
                    b.Navigation("ResumenIngresos");

                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
